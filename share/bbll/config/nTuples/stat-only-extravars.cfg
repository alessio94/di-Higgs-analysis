common:
    int process_id              << $(processID),
    int is_sf                   << $(isSF),
    int is_ee                   << $(isEE),
    int is_em                   << $(isEM),
    float ll_m                  << $(DiLeptonMass)/1000.0,
    float bb_m                  << $(DiBJetMass)/1000.0,
    float m_bl                  << $(M_BL)/1000.,
    int bjet_0_truthinfo        << $(BJet0TruthLabelID),
    int bjet_1_truthinfo        << $(BJet1TruthLabelID),
    int jet_0_truthinfo         << $(AllJet0TruthLabelID),
    int jet_1_truthinfo         << $(AllJet1TruthLabelID),
    int yield                   << 1,
    int vbf_veto                << $(VBFVeto),
    float lept_0_pt             << $(Lepton0Pt)/1000.,
    float lept_0_eta            << $(Lepton0Eta),
    float lept_0_phi            << $(Lepton0Phi),
    float lept_1_pt             << $(Lepton1Pt)/1000.,
    float lept_1_eta            << $(Lepton1Eta),
    float lept_1_phi            << $(Lepton1Phi),
    float bjet_0_pt             << $(BJet0Pt)/1000.,
    float bjet_0_eta            << $(BJet0Eta),
    float bjet_0_phi            << $(BJet0Phi),
    float bjet_1_pt             << $(BJet1Pt)/1000.,
    float bjet_1_eta            << $(BJet1Eta),
    float bjet_1_phi            << $(BJet1Phi),
    float ll_m                  << $(DiLeptonMass)/1000.,
    float ll_pt                 << $(DiLeptonPt)/1000.,
    float ll_deltar             << $(DiLeptonDeltaR),
    float ll_deltaphi           << $(DiLeptonDeltaPhi),
    float bb_m                  << $(DiBJetMass)/1000.,
    float bb_pt                 << $(DiBJetPt)/1000.,
    float bb_deltar             << $(DiBJetDeltaR),
    float bb_deltaphi           << $(DiBJetDeltaPhi),
    float deltar_min_bl         << $(BJetLeptonDeltaRmin),
    float met_met               << $(MET_met)/1000.,
    float met_phi               << [MET:metphi],
    float met_sig               << [MET:metsig],
    float mmc_mlnu3p            << $(MMC_mlnu3p),
    int mmc_status              << $(MMC_mlnu3p)>0?1:0,
    float mt_lep0_met           << $(MT_LEP0_MET)/1000.,
    float mt_lep1_met           << $(MT_LEP1_MET)/1000.,
    float mt_l_min              << $(MT_L_min)/1000.,
    float mcoll                 << $(MColl)/1000.,
    float met_phi_centrality    << [MET_PHI_CENTRALITY],
    float dphi_met_ll           << [DPHI_MET_LL],
    float sum_met_ptll          << [SUM_MET_PTLL]/1000.,
    float ht2r                  << [HT2R],
    float pt_bbll_vector        << $(PtBBLLVector)/1000.,
    float m_bbll                << $(MBBLL)/1000.,
    float m_bl                  << $(M_BL)/1000.,
    float pt_bbllmet_vector     << $(PtBBLLMETVector)/1000.,
    float m_bbllmet             << $(MBBLLMET)/1000.,
    float m_t2_bb               << [MT2_BB],
    float m_top                 << $(KLF_mtop),
    int klf_status              << $(KLF_mtop)>0?1:0,
    float truth_mhh             << [TruthMhh]/1000.;



sr1:
    float nn_sr1_signal             << $(NN_SR1_NodeSignal),
    float nn_sr1_top                << $(NN_SR1_NodeTop),
    float nn_sr1_other              << $(NN_SR1_NodeOther),
    float nn_sr1_kl10_signal        << $(NN_SR1_KL10_NodeSignal),
    float nn_sr1_kl10_top           << $(NN_SR1_KL10_NodeTop),
    float nn_sr1_kl10_other         << $(NN_SR1_KL10_NodeOther),
    float nn_sr2_signal             << 0,
    float nn_sr2_top                << 0,
    float nn_sr2_zll                << 0,
    float nn_sr2_other              << 0,
    float nn_sr2_kl10_signal        << 0,
    float nn_sr2_kl10_top           << 0,
    float nn_sr2_kl10_zll           << 0,
    float nn_sr2_kl10_other         << 0;


sr2:
    float nn_sr1_signal             << 0,
    float nn_sr1_top                << 0,
    float nn_sr1_other              << 0,
    float nn_sr1_kl10_signal        << 0,
    float nn_sr1_kl10_top           << 0,
    float nn_sr1_kl10_other         << 0,
    float nn_sr2_signal             << $(NN_SR2_NodeSignal),
    float nn_sr2_top                << $(NN_SR2_NodeTop),
    float nn_sr2_zll                << $(NN_SR2_NodeZll),
    float nn_sr2_other              << $(NN_SR2_NodeOther),
    float nn_sr2_kl10_signal        << $(NN_SR2_KL10_NodeSignal),
    float nn_sr2_kl10_top           << $(NN_SR2_KL10_NodeTop),
    float nn_sr2_kl10_zll           << $(NN_SR2_KL10_NodeZll),
    float nn_sr2_kl10_other         << $(NN_SR2_KL10_NodeOther);


cr:
    float nn_sr1_signal             << $(NN_SR1_NodeSignal),
    float nn_sr1_top                << $(NN_SR1_NodeTop),
    float nn_sr1_other              << $(NN_SR1_NodeOther),
    float nn_sr1_kl10_signal        << $(NN_SR1_KL10_NodeSignal),
    float nn_sr1_kl10_top           << $(NN_SR1_KL10_NodeTop),
    float nn_sr1_kl10_other         << $(NN_SR1_KL10_NodeOther),
    float nn_sr2_signal             << $(NN_SR2_NodeSignal),
    float nn_sr2_top                << $(NN_SR2_NodeTop),
    float nn_sr2_zll                << $(NN_SR2_NodeZll),
    float nn_sr2_other              << $(NN_SR2_NodeOther),
    float nn_sr2_kl10_signal        << $(NN_SR2_KL10_NodeSignal),
    float nn_sr2_kl10_top           << $(NN_SR2_KL10_NodeTop),
    float nn_sr2_kl10_zll           << $(NN_SR2_KL10_NodeZll),
    float nn_sr2_kl10_other         << $(NN_SR2_KL10_NodeOther);



@Cut2TagMllSR1VBFVeto:  common  >> data/ntup/unmerged/stat-only-extravars/$(jobID)_SR1VBFVeto.root:$(ntupleTreeName)
@Cut2TagMllSR1VBFVeto:  sr1     >> data/ntup/unmerged/stat-only-extravars/$(jobID)_SR1VBFVeto.root:$(ntupleTreeName)
@Cut2TagMbbSR2:         common  >> data/ntup/unmerged/stat-only-extravars/$(jobID)_SR2.root:$(ntupleTreeName)
@Cut2TagMbbSR2:         sr2     >> data/ntup/unmerged/stat-only-extravars/$(jobID)_SR2.root:$(ntupleTreeName)
@Cut2TagMllTopCR:       common  >> data/ntup/unmerged/stat-only-extravars/$(jobID)_TopCR.root:$(ntupleTreeName)
@Cut2TagMllTopCR:       cr      >> data/ntup/unmerged/stat-only-extravars/$(jobID)_TopCR.root:$(ntupleTreeName)
@Cut2TagMbbZllCR:       common  >> data/ntup/unmerged/stat-only-extravars/$(jobID)_ZllCR.root:$(ntupleTreeName)
@Cut2TagMbbZllCR:       cr      >> data/ntup/unmerged/stat-only-extravars/$(jobID)_ZllCR.root:$(ntupleTreeName)
