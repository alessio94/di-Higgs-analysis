# -*- mode: tqfolder -*-
# to get proper syntax highlighting and indentation when using emacs,
# add the following line to your .emacs file:
#   (load-file "$TQPATH/share/tqfolder.el")

+CutBase2Leptons {
    <.cutExpression = "$(NLeptons) == 2", .title="Base cut (2 leptons)">
+CutBaseChannelSplit {
    <.cutExpression = "$(fitsChannel)", .weightExpression = "[MCWeight] * [PUWeight] * $(PRWFix) * [LeptonSF] * [JvtSF] * [TTbarNNLOWeight]", .title="Base cut (channel split)">

    +CutApplyTTBarSplitting {
        <.cutExpression = "$(applyTTBarSplitting) ? ($(isFakeTTbar) != $(MCTCisLeptonicTopDecay)) : 1", .title="Split ttbar">

    +CutTriggerMatching {
        <.cutExpression = "$(Trigger) != 0", .weightExpression="$(TriggerSF)", .title="Trigger selection and matching">

## SIGNAL REGION

        +CutNBJets2Plus {
            <.cutExpression = "$(NBJets)>=2", .title="NBJets>=2", .weightExpression="[BTagSF:DL1r:FixedCutBEff_77]">

            +CutOS {
                <.cutExpression = "$(Lepton0Charge) * $(Lepton1Charge) == -1", .title="Oppsite charge">

                +CutMll {
                    <.cutExpression = "20*1000 < $(DiLeptonMass)", .title="20 GeV < m_{\ell\ell}">

                    +CutMbb {
                        <.cutExpression = "100*1000 < $(DiBJetMass) && $(DiBJetMass) < 140*1000", .title="100 GeV < m_{bb} < 140 GeV">

                    } # CutMbb
                } # CutMll
            } # CutOS
        } # CutNBJets2Plus
    } # TriggerMatching
    } # CutApplyTTBarSplitting
} # CutBaseChannelSplit
} # CutBase2Leptons
